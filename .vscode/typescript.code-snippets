{
	// Place your hypeline workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Event handler": {
		"scope": "typescript",
		"prefix": "defineHandler",
		"body": [
			"import { defineHandler } from \"../helper\";",
			"",
			"export default defineHandler({",
			"\tname: \"${1}\",",
			"\thandle(data) {",
			"\t\t$0",
			"\t},",
			"})",
		],
	},
	"Command handler": {
		"scope": "typescript",
		"prefix": "cmd",
		"body": [
			"import { defineCommand } from \"./util\";",
			"",
			"export default defineCommand({",
			"\tname: \"${TM_FILENAME_BASE}\",",
			"\tdescription: \"${2}\",",
			"\tasync exec(args, channel, user) {",
			"\t\t$0",
			"\t},",
			"})",
		],
	},
}
